name: create_base_image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ create_base_image ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TEST_NAME: "h1_h1_passthrough"
    steps:
    - uses: actions/checkout@v2
    # - name: Write K8S cluster ingress to file
    #   run: |
    #     kubectl get ing h1-h1-passthrough -o "jsonpath={.status.loadBalancer.ingress[0].ip}" > $GITHUB_WORKSPACE/scripts/ip.txt
    #     echo ${TEST_NAME} > $GITHUB_WORKSPACE/scripts/scenario.txt
    #     cat $GITHUB_WORKSPACE/scripts/ip.txt
    #     cd $GITHUB_WORKSPACE
    #     mkdir artifacts
    #     cp -r scripts/ artifacts
    #     cp -r tests/ artifacts
    #     cp -r utils/ artifacts
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Build and Distribute Custom VM Image
      id: imageBuilder
      uses: azure/build-vm-image@v0
      with:
        resource-group-name: '${{ secrets.CLUSTER_RESOURCE_GROUP }}'
        location: 'eastus'
        managed-identity: 'bal-perf-identity'
        source-os-type: 'linux'
        source-image-type: 'PlatformImage'
        source-image: Canonical:UbuntuServer:18.04-LTS:latest
        dist-image-tags: 'number:${{ GITHUB.RUN_NUMBER }}'
        customizer-source: ${{ GITHUB.WORKSPACE }}/base-image
        customizer-script: |
          sudo cp -r /tmp/base-image/ /
          sh /base-image/init.sh

    # - name: Create VM Instance
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.0.72
    #     inlineScript: |
    #       az vm create --resource-group "${{ secrets.CLUSTER_RESOURCE_GROUP }}"  --name "bal-perf-vm-${{ GITHUB.RUN_NUMBER }}"  --admin-username "${{ secrets.VM_USER }}" --admin-password "${{ secrets.VM_PWD }}" --location  eastus \
    #       --image "${{ steps.imageBuilder.outputs.custom-image-uri }}"
